---
- name: Get the current users home
  shell: echo $HOME
  changed_when: false
  register: user_home

- name: Get the current users name
  shell: id -u -n
  changed_when: false
  register: user_name

- name: Get the current users group
  shell: id -g -n
  changed_when: false
  register: user_group

- name: Install Google Tools adb and others
  become: yes
  apt: pkg="{{ item }}" state=latest
  with_items:
  - fonts-roboto

- name: Check if android-ndk exists
  stat: path={{ ansible_cache_dir }}/{{ android_ndk_zip }} follow=yes
  register: ndk_exist
  ignore_errors: True

- name: Downloading android-ndk
  get_url: dest={{ ansible_cache_dir }}/{{ android_ndk_zip }} url={{ android_ndk_url }}
  when: ndk_exist.stat.exists == false

- name: Check if android-ndk directory exists
  stat: path=/opt/Arsenal/android-ndk follow=yes
  register: ndk_dir_exist
  ignore_errors: True

- name: Unpack Android NDK
  action: unarchive copy=no src={{ ansible_cache_dir }}/{{ android_ndk_zip }} dest=/opt/Arsenal/
  when: ndk_dir_exist.stat.exists == false

- name: Rename ndk android
  command: mv /opt/Arsenal/{{ android_ndk_folder }} /opt/Arsenal/android-ndk
  when: ndk_dir_exist.stat.exists == false

- name: Check if Android Studio exists
  stat: path={{ ansible_cache_dir }}/{{ studio_file_name }} follow=yes
  register: studio_exist
  ignore_errors: True

- name: Download AndroidStudio
  get_url: dest={{ ansible_cache_dir }}/{{ studio_file_name }} url={{ studio_download_url }}
  when: studio_exist.stat.exists == false

- name: Check if Android Studio directory exists
  stat: path=/opt/Arsenal/{{ studio_folder }} follow=yes
  register: studio_dir_exist
  ignore_errors: True

- name: Create studio_folder
  action: file path=/opt/Arsenal/{{ studio_folder }} recurse=yes state=directory owner={{ user_name.stdout }} group={{ user_group.stdout }}
  when: studio_dir_exist.stat.exists == false

- name: Unpack Android Studio
  action: unarchive copy=no src={{ ansible_cache_dir }}/{{ studio_file_name }} dest=/opt/Arsenal/
  when: studio_dir_exist.stat.exists == false

# Need to match the usecase here
- name: chown files
  action: file path=/opt/Arsenal/{{ studio_folder }} recurse=yes state=directory owner={{ user_name.stdout }} group={{ user_group.stdout }}

- name: add ANDROID_HOME
  action: lineinfile dest={{ user_home.stdout }}/.bashrc line="{{ item }}"
  with_items:
  #- 'export ANDROID_HOME=/opt/Arsenal/{{ android_folder }}'
  #- 'export ANDROID_TOOLS=$ANDROID_HOME/tools/'
  #- 'export ANDROID_PLATFORM_TOOLS=$ANDROID_HOME/platform-tools/'
  #- 'export ANDROID_PLATFORM_BUILD=$ANDROID_HOME/build-tools/21.1.2/'
  - 'export ANDROID_STUDIO_BIN=/opt/Arsenal/{{ studio_folder }}/bin'
  # - 'export PATH=$PATH:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS:$ANDROID_STUDIO_BIN:$ANDROID_PLATFORM_BUILD'
  - 'export ANDROID_NDK=/opt/Arsenal/android-ndk/'
  #- 'export PATH=$PATH:$ANDROID_TOOLS:$ANDROID_NDK:$ANDROID_PLATFORM_TOOLS:$ANDROID_STUDIO_BIN:$ANDROID_PLATFORM_BUILD'

- name: Add ANDROID_HOME
  action: lineinfile dest={{ user_home.stdout }}/.zshrc line="{{ item }}"
  with_items:
  #- 'export ANDROID_HOME=/opt/Arsenal/{{ android_folder }}'
  #- 'export ANDROID_TOOLS=$ANDROID_HOME/tools/'
  #- 'export ANDROID_PLATFORM_TOOLS=$ANDROID_HOME/platform-tools/'
  #- 'export ANDROID_PLATFORM_BUILD=$ANDROID_HOME/build-tools/21.1.2/'
  - 'export ANDROID_STUDIO_BIN=/opt/Arsenal/{{ studio_folder }}/bin'
  # - 'export PATH=$PATH:$ANDROID_TOOLS:$ANDROID_PLATFORM_TOOLS:$ANDROID_STUDIO_BIN:$ANDROID_PLATFORM_BUILD'
  - 'export ANDROID_NDK=/opt/Arsenal/android-ndk/'
  #- 'export PATH=$PATH:$ANDROID_TOOLS:$ANDROID_NDK:$ANDROID_PLATFORM_TOOLS:$ANDROID_STUDIO_BIN:$ANDROID_PLATFORM_BUILD'
